name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js (for frontend and test runner)
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      # LIMPIA e instala backend desde cero para evitar problemas con binarios corruptos
      - name: Clean and install backend dependencies
        working-directory: ./backend
        run: |
          rm -rf node_modules package-lock.json
          npm install

      # ELIMINA el paso de chmod que da problemas
      # - name: Fix jest permissions
      #   working-directory: ./backend
      #   run: chmod +x ./node_modules/.bin/jest

      - name: Create DB connection
        run: |
          docker run -d \
            --name mysql \
            -e MYSQL_ROOT_PASSWORD=rootpassword \
            -e MYSQL_DATABASE=testdb \
            -e MYSQL_USER=fran \
            -e MYSQL_PASSWORD=fran \
            -v "${{ github.workspace }}/backend/src/db/init.sql:/docker-entrypoint-initdb.d/init.sql" \
            mysql:8.0

      - name: Wait for DB to be ready
        run: |
          until docker exec mysql mysql -u fran -pfran -e "SELECT 1;" ; do
            echo "Waiting for DB to be ready..."
            sleep 5
          done

      - name: Verify DB User and Permissions
        run: |
          docker exec mysql mysql -u root -prootpassword -e "SELECT user, host FROM mysql.user WHERE user = 'fran';"

      - name: Run backend tests
        working-directory: ./backend
        run: npx jest src/test/Unitarios/eventoController.test.js --runInBand

      - name: Build Docker image for frontend
        run: docker build -t aa-frontend ./frontend

      - name: Build Docker image for backend
        run: docker build -t aa-backend ./backend
